Структури и указатели към структури
	* стр. 41, зад. 7
	* стр. 41, зад. 8
Клас String 1:
	* Да се дефинира метод bool lessthan (String s)
	* Да се дефинира оператор void remove (char c). След изпълнение на оператора от стринга да са премахнати всички срещания на символа c, ако има такива
	Пример:
	String s1 = "Hello world";
	s1.remove ('l');
	s1.print (); //Heo word
	* Да се дефинира вариант на метода concat за символ: void concat (char c);
	* Да се дефинира конструктор за копиране
2015-04-08:
	* Да се дефинира метод member на клас IntArray
	* Да се дефинира метод sum (), намиращ сумата на елементите на масив от числа
	* Да се дефинира подходящ метод equals, чрез който да може да се проверява дали два масива от числа са еднакви
	* Да се демонстрира с програмен код, че така написания конструктор на клас String функционира коректно по два начина
	* Конкатенация на масиви от числа 
	* Изтриване на елемент от масив от числа по индекс
	Пример:
	IntArray a;
	//вмъкваме 1,2,3,4
	a.print(); //->1,2,3,4
	a.removeAt (2);
	a.print(); //->1,2,4
2015-04-15: 
    * Да се предифинира оператор = за IntArray

2015-05:

    * Довършителна задача за ЛЕС    

2015-05-20:

    * Да се дефинират методи print, read, perimeter за всички фигури
    * Да се абстрахират тези методи в базовия клас
    * Да се напише програма, която в диалогов режим въвежда от кавиатурата 10 разнотипни обекта и извежда сумата на лицата им

2015-05-27:

	* Да се добавят класове за фукнциите < и > (сравнение на числа, които произвежда 0 или 1). Пример +<123 -> 4
	* Да се разшири езикът така, че да поддъжа < и >
	* Да се подобри парсера на изрази така, че да поддържа и мноцифрени числа (hint: cin.peek())
	* Да се добавят класове за фукнциите min и max (двуместни)
	* Да се разшири езикът така, че да поддъжа min и max
	
